const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let player = {
    x: canvas.width / 2,
    y: canvas.height - 30,
    width: 50,
    height: 50,
    dx: 0
};

let objects = [];
let score = 0;

function drawPlayer() {
    ctx.fillStyle = 'blue';
    ctx.fillRect(player.x, player.y, player.width, player.height);
}

function drawObjects() {
    ctx.fillStyle = 'red';
    objects.forEach(obj => {
        ctx.fillRect(obj.x, obj.y, obj.width, obj.height);
    });
}

function updateObjects() {
    objects.forEach(obj => {
        obj.y += obj.dy;
    });

    objects = objects.filter(obj => obj.y < canvas.height);
}

function createObject() {
    const x = Math.random() * (canvas.width - 20);
    objects.push({ x, y: 0, width: 20, height: 20, dy: 2 });
}

function detectCollision() {
    objects.forEach((obj, index) => {
        if (obj.x < player.x + player.width &&
            obj.x + obj.width > player.x &&
            obj.y < player.y + player.height &&
            obj.y + obj.height > player.y) {
            objects.splice(index, 1);
            score++;
        }
    });
}

function updatePlayer() {
    player.x += player.dx;

    if (player.x < 0) player.x = 0;
    if (player.x + player.width > canvas.width) player.x = canvas.width - player.width;
}

function drawScore() {
    ctx.fillStyle = 'black';
    ctx.font = '20px Arial';
    ctx.fillText(`Score: ${score}`, 10, 20);
}

function clearCanvas() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
}

function gameLoop() {
    clearCanvas();
    drawPlayer();
    drawObjects();
    drawScore();
    updateObjects();
    updatePlayer();
    detectCollision();
    requestAnimationFrame(gameLoop);
}

document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowRight') player.dx = 5;
    if (e.key === 'ArrowLeft') player.dx = -5;
});

document.addEventListener('keyup', () => {
    player.dx = 0;
});

setInterval(createObject, 1000);
gameLoop();
