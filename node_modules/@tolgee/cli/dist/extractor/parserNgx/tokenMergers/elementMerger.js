// <div ... t
export const componentWithTMerger = {
    initial: 0 /* S.Idle */,
    step: (state, t, end) => {
        const type = t.customType;
        switch (state) {
            case 0 /* S.Idle */:
                if (type === 'tag.regular.begin') {
                    return 1 /* S.ExpectName */;
                }
                break;
            case 1 /* S.ExpectName */:
                if (type === 'tag.name') {
                    return 2 /* S.ExpectTParam */;
                }
                break;
            case 2 /* S.ExpectTParam */:
                if (type === 'tag.attribute.name' && t.token === 't') {
                    return end.REPLACE_FIRST;
                }
                else if (type === 'tag.self-closing.end' ||
                    type === 'tag.regular.end') {
                    return undefined;
                }
                return 2 /* S.ExpectTParam */;
        }
    },
    customType: 'trigger.component.with.t',
};
