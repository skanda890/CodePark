export const createIterator = (items) => {
    const iterator = items[Symbol.iterator]();
    let currentItem;
    let nextItem = iterator.next();
    const listeners = [];
    let currentContext = undefined;
    const self = {
        getLineNumber() {
            return currentItem?.line ?? 0;
        },
        current() {
            return currentItem;
        },
        peek() {
            return nextItem.done ? undefined : nextItem.value;
        },
        onAccept(listener) {
            listeners.push(listener);
        },
        setLabel(context) {
            currentContext = context;
        },
        getLabel() {
            return currentContext;
        },
        next() {
            const value = self.peek();
            if (currentItem) {
                listeners.forEach((cb) => cb(currentItem, currentContext));
            }
            currentItem = nextItem.done ? undefined : nextItem.value;
            nextItem = iterator.next();
            return value;
        },
    };
    return self;
};
