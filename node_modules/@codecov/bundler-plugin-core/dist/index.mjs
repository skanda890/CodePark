import{satisfies as J}from"semver";import U from"chalk";import{z as a}from"zod";import v from"child_process";import{ReadableStream as W,TextEncoderStream as x}from"node:stream/web";function h(e){return typeof e=="string"?e:e instanceof Error?`${e.stack??""}`:JSON.stringify(e,null,"	")}function $(e){console.log(`[codecov] ${e}`)}function O(e){return $(U.green(h(e)))}function l(e){return $(U.red(h(e)))}function B(e){return $(U.cyan(h(e)))}function u(e,{enabled:n=!0}={enabled:!0}){if(n)return $(U.italic.yellow(h(e)))}const P=">=18.18.0";function Q(e){return J(process.version,P)?!1:(l(`Codecov ${e.framework} bundler plugin requires Node.js ${P}. You are using Node.js ${process.version}. Please upgrade your Node.js version.`),!0)}const z=/^[\w\d_:/@\.{}\[\]$-]+$/,q=a.object({branch:a.string({invalid_type_error:"`branch` must be a string."}).optional(),build:a.string({invalid_type_error:"`build` must be a string."}).optional(),pr:a.string({invalid_type_error:"`pr` must be a string."}).optional(),sha:a.string({invalid_type_error:"`sha` must be a string."}).optional(),slug:a.string({invalid_type_error:"`slug` must be a string."}).optional()}),X=e=>a.object({apiUrl:a.string({invalid_type_error:"`apiUrl` must be a string."}).url({message:`apiUrl: \`${e?.apiUrl}\` is not a valid URL.`}).default("https://api.codecov.io"),bundleName:a.string({invalid_type_error:"`bundleName` must be a string.",required_error:"`bundleName` is required for uploading bundle analysis information."}).regex(z,{message:`bundleName: \`${e?.bundleName}\` does not match format: \`/^[wd_:/@.{}[]$-]+$/\`.`}),dryRun:a.boolean({invalid_type_error:"`dryRun` must be a boolean."}).default(!1),retryCount:a.number({invalid_type_error:"`retryCount` must be a number."}).positive({message:"`retryCount` must be a positive number."}).int({message:"`retryCount` must be an integer."}).default(3),enableBundleAnalysis:a.boolean({invalid_type_error:"`enableBundleAnalysis` must be a boolean."}).default(!1),uploadToken:a.string({invalid_type_error:"`uploadToken` must be a string."}).optional(),uploadOverrides:q.optional(),debug:a.boolean({invalid_type_error:"`debug` must be a boolean."}).default(!1)}),Z=e=>{const n=X(e).safeParse(e);if(!n.success){const t=[],r=n.error.issues;for(const s of r)t.push(s.message);return{success:!1,errors:t}}return{options:n.data,success:!0}},ee=e=>{let n=!1;for(const t of e.errors)t.includes("bundleName")&&(n=!0),l(t);return{shouldExit:n}},D=/[a-f0-9]{8,}/i,ne=["[hash]","[contenthash]","[fullhash]","[chunkhash]"],A=e=>e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d"),te=(e,n)=>{const t=[];for(const s of ne){const i=n.indexOf(s);i!==-1&&t.push({hashString:s,hashIndex:i})}let r=e;for(const s of t){const i=n.at(s.hashIndex-1)??"",o=`(?<leadingDelimiter>${A(i)})`;let _=n.at(s.hashIndex+s.hashString.length)??"";_==="["&&(_=".");const d=`(?<endingDelimiter>${A(_)})`,k=`(${o}(?<hash>[0-9a-zA-Z/+=-]+)${d})`,K=new RegExp(k,"i");r=r.replace(K,"$<leadingDelimiter>*$<endingDelimiter>")}return r===e&&D.test(r)?r.replace(D,"*"):r};class f extends Error{constructor(n){super(n)}}class re extends Error{constructor(n){super(n)}}class M extends Error{constructor(n){super(n)}}const se=104857600,V=3,ue=1e3,ie=":::",oe="::::";class H extends Error{constructor(n){super(n)}}const ae=e=>new Promise(n=>setTimeout(n,e)),y=async({url:e,retryCount:n,requestData:t,name:r})=>{let s=new Response(null,{status:400});for(let i=0;i<n+1;i++)try{if(u(`Attempting to fetch ${r}, attempt: ${i+1}`),await ae(ue*i),s=await fetch(e,t),!s.ok)throw new H("Response not ok");break}catch(o){if(u(`${r} fetch attempt ${i+1} failed`),i+1===n){if(l(`${r} failed after ${i} attempts`),!(o instanceof H))throw o;return s}}return s};class ce extends Error{constructor(n){super(n)}}const _e=e=>{for(const[n,t]of Object.entries(e))n==="slug"&&typeof t=="string"&&(e[n]=le(t)),(!t||t==="")&&(e[n]=null);return e},le=e=>{const n=e.lastIndexOf("/")+1,t=e.substring(0,n).trimEnd(),r=e.substring(n,e.length);if(t===""||r==="")throw l("Invalid owner and/or repo"),new ce("Invalid owner and/or repo");return[t?.split("/").join(ie).slice(0,-3),r].join(oe)},Ee=a.object({url:a.string()}),ge=async({apiURL:e,uploadToken:n,serviceParams:t,retryCount:r=V})=>{if(!n)throw l("No upload token found"),new re("No upload token found");const s=`${e}/upload/bundle_analysis/v1`;let i;try{i=await y({url:s,retryCount:r,name:"`get-pre-signed-url`",requestData:{method:"POST",headers:{"Content-Type":"application/json",Authorization:`token ${n}`},body:JSON.stringify(_e(t))}})}catch{throw l("Failed to fetch pre-signed URL"),new f("Failed to fetch pre-signed URL")}if(i.status===429)throw l("Upload limit reached"),new M("Upload limit reached");if(!i.ok)throw l("Failed to get pre-signed URL, bad response"),new f("Failed to get pre-signed URL");let o;try{o=await i.json()}catch{throw l("Failed to parse pre-signed URL body"),new f("Failed to parse pre-signed URL body")}const _=Ee.safeParse(o);if(!_.success)throw l("Failed to validate pre-signed URL"),new f("Failed to validate pre-signed URL");return O("Successfully pre-signed URL fetched"),_.data.url};function de(e){return(e?.CI==="true"||e?.CI==="True")&&(e?.APPVEYOR==="true"||e?.APPVEYOR==="True")}function Re(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.APPVEYOR_JOB_ID??""}function Ie(e){const{envs:n}=e;return n?.APPVEYOR_URL&&n?.APPVEYOR_REPO_NAME&&n?.APPVEYOR_BUILD_ID&&n?.APPVEYOR_JOB_ID?`${n?.APPVEYOR_URL}/project/${n?.APPVEYOR_REPO_NAME}/builds/${n?.APPVEYOR_BUILD_ID}/job/${n?.APPVEYOR_JOB_ID}`:""}function be(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.APPVEYOR_REPO_BRANCH??""}function fe(e){return e?.APPVEYOR_ACCOUNT_NAME&&e?.APPVEYOR_PROJECT_SLUG&&e?.APPVEYOR_BUILD_VERSION?`${e?.APPVEYOR_ACCOUNT_NAME}/${e?.APPVEYOR_PROJECT_SLUG}/${e?.APPVEYOR_BUILD_VERSION}`:""}function me(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.APPVEYOR_PULL_REQUEST_NUMBER??""}function Ue(){return"appveyor"}function he(){return"Appveyor CI"}function $e(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.APPVEYOR_PULL_REQUEST_HEAD_COMMIT??r?.APPVEYOR_REPO_COMMIT??"";return u(`Using commit: ${s??""}`,{enabled:n.debug}),s}function Ce(e){const{args:n,envs:t}=e;return n?.slug&&n.slug!==""?n.slug:t?.APPVEYOR_REPO_NAME??""}async function ve(e,n){return{branch:be(e),build:Re(e),buildURL:Ie(e),commit:$e(e,n),job:fe(e.envs),pr:me(e),service:Ue(),slug:Ce(e)}}function Se(){return["APPVEYOR","APPVEYOR_ACCOUNT_NAME","APPVEYOR_BUILD_ID","APPVEYOR_BUILD_VERSION","APPVEYOR_JOB_ID","APPVEYOR_PROJECT_SLUG","APPVEYOR_PULL_REQUEST_HEAD_COMMIT","APPVEYOR_PULL_REQUEST_NUMBER","APPVEYOR_REPO_BRANCH","APPVEYOR_REPO_COMMIT","APPVEYOR_REPO_NAME","APPVEYOR_URL","CI"]}const Ne={__proto__:null,detect:de,getEnvVarNames:Se,getServiceName:he,getServiceParams:ve};function R(e,n=[]){const t=v.spawnSync(e,n,{maxBuffer:se});if(t.error)throw new Error(`Error running external program: ${t.error}`);return t.stdout.toString().trim()}function G(e){if(typeof e!="string")return"";if(e.match(/^(ssh|https?):/)){const n=(e.split("//")[1]?.replace(".git","")??"")?.split("/")??"";return n.length>2?`${n[1]}/${n[2]}`:""}if(e.match("@"))return e.split(":")[1]?.replace(".git","")??"";throw new Error(`Unable to parse slug URL: ${e}`)}function I(e){let n="";return e||(e=R("git",["config","--get","remote.origin.url"])||""),e&&(n=G(e)),n==="/"&&(n=""),n}function pe(e){return!!e?.SYSTEM_TEAMFOUNDATIONSERVERURI}function Te(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BUILD_BUILDNUMBER??""}function Le(e){const{envs:n}=e;return n?.SYSTEM_TEAMPROJECT&&n?.BUILD_BUILDID?`${n?.SYSTEM_TEAMFOUNDATIONSERVERURI}${n?.SYSTEM_TEAMPROJECT}/_build/results?buildId=${n?.BUILD_BUILDID}`:""}function Oe(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.BUILD_SOURCEBRANCH?t?.BUILD_SOURCEBRANCH.toString().replace("refs/heads/",""):""}function Be(e){return e?.BUILD_BUILDID??""}function w(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.SYSTEM_PULLREQUEST_PULLREQUESTNUMBER??t?.SYSTEM_PULLREQUEST_PULLREQUESTID??""}function Pe(){return"azure_pipelines"}function De(){return"Azure Pipelines"}function Ae(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t?.sha}`,{enabled:n.debug}),t.sha;let s=r?.BUILD_SOURCEVERSION??"";if(w(e)){const i=/^[a-z0-9]{40} [a-z0-9]{40}$/,o=v.execFileSync("git",["show","--no-patch","--format=%P"]).toString().trimEnd();if(u(`Merge commit message: ${o}`,{enabled:n.debug}),i.exec(o)){const _=o.split(" ");u(`Split merge commit: ${_}`,{enabled:n.debug}),s=_?.[1]??""}}return u(`Using commit: ${s}`,{enabled:n.debug}),s}function Me(e){const{args:n,envs:t}=e;return n?.slug&&n.slug!==""?n.slug:t?.BUILD_REPOSITORY_NAME??I("")??""}async function Ve(e,n){return{branch:Oe(e),build:Te(e),buildURL:Le(e),commit:Ae(e,n),job:Be(e.envs),pr:w(e),service:Pe(),slug:Me(e)}}function He(){return["BUILD_BUILDID","BUILD_BUILDNUMBER","BUILD_SOURCEBRANCH","BUILD_SOURCEVERSION","SYSTEM_PULLREQUEST_PULLREQUESTID","SYSTEM_PULLREQUEST_PULLREQUESTNUMBER","SYSTEM_TEAMFOUNDATIONSERVERURI","SYSTEM_TEAMPROJECT"]}const ye={__proto__:null,detect:pe,getEnvVarNames:He,getServiceName:De,getServiceParams:Ve},Ge=40,we=/^[0-9a-f]+$/;function Ye(e,n=Ge){return a.string().length(n).refine(t=>we.test(t)).safeParse(e).success}function Fe(e){return!!e?.CI&&!!e?.BITBUCKET_BUILD_NUMBER}function je(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BITBUCKET_BUILD_NUMBER??""}function ke(){return""}function Ke(e){const{args:n,envs:t}=e;return n?.branch&&n?.branch!==""?n?.branch:t?.BITBUCKET_BRANCH??""}function Je(e){return e?.BITBUCKET_BUILD_NUMBER??""}function We(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.BITBUCKET_PR_ID??""}function xe(){return"bitbucket"}function Qe(){return"Bitbucket"}function ze(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;let s=r.BITBUCKET_COMMIT??"";return s&&Ye(s,12)&&(s=R("git",["rev-parse",s])),u(`Using commit: ${s??""}`,{enabled:n.debug}),s??""}function qe(e){const{args:n,envs:t}=e;return n?.slug&&n.slug!==""?n.slug:t?.BITBUCKET_REPO_FULL_NAME??""}async function Xe(e,n){return{branch:Ke(e),build:je(e),buildURL:ke(),commit:ze(e,n),job:Je(e.envs),pr:We(e),service:xe(),slug:qe(e)}}function Ze(){return["CI","BITBUCKET_BUILD_NUMBER"]}const en={__proto__:null,detect:Fe,getEnvVarNames:Ze,getServiceName:Qe,getServiceParams:Xe};function nn(e){return!!e?.CI&&!!e?.BITRISE_IO}function tn(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BITRISE_BUILD_NUMBER??""}function rn(e){const{envs:n}=e;return n?.BITRISE_BUILD_URL??""}function sn(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.BITRISE_GIT_BRANCH??""}function un(){return""}function on(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.BITRISE_PULL_REQUEST??""}function an(){return"bitrise"}function cn(){return"Bitrise CI"}function _n(e,n){const{args:t,envs:r}=e;return t?.sha&&t.sha!==""?(u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha):(u(`Using commit: ${r?.GIT_CLONE_COMMIT_HASH??""}`,{enabled:n.debug}),r?.GIT_CLONE_COMMIT_HASH??"")}function ln(e){const{args:n}=e;return n?.slug&&n.slug!==""?n.slug:I("")??""}async function En(e,n){return{branch:sn(e),build:tn(e),buildURL:rn(e),commit:_n(e,n),job:un(),pr:on(e),service:an(),slug:ln(e)}}function gn(){return["BITRISE_BUILD_NUMBER","BITRISE_BUILD_URL","BITRISE_GIT_BRANCH","BITRISE_IO","BITRISE_PULL_REQUEST","CI","GIT_CLONE_COMMIT_HASH"]}const dn={__proto__:null,detect:nn,getEnvVarNames:gn,getServiceName:cn,getServiceParams:En};function Rn(e){return!!e?.BUILDKITE}function In(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BUILDKITE_BUILD_NUMBER??""}function bn(e){return e.envs?.BUILDKITE_BUILD_URL??""}function fn(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.BUILDKITE_BRANCH??""}function mn(e){return e?.BUILDKITE_JOB_ID??""}function Un(e){const{args:n}=e;return n?.pr??""}function Y(){return"buildkite"}function hn(){return"Buildkite"}function $n(e,n){const{args:t,envs:r}=e;return t?.sha&&t.sha!==""?(u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha):(u(`Using commit: ${t?.sha??r?.BUILDKITE_COMMIT}`,{enabled:n.debug}),r?.BUILDKITE_COMMIT??"")}function Cn(e){const{args:n,envs:t}=e;return C(n?.slug,t?.BUILDKITE_ORGANIZATION_SLUG,t?.BUILDKITE_PIPELINE_SLUG)}async function vn(e,n){return{branch:fn(e),build:In(e),buildURL:bn(e),commit:$n(e,n),job:mn(e.envs),pr:Un(e),service:Y(),slug:Cn(e)}}function Sn(){return["BUILDKITE","BUILDKITE_BRANCH","BUILDKITE_BUILD_NUMBER","BUILDKITE_BUILD_URL","BUILDKITE_COMMIT","BUILDKITE_JOB_ID","BUILDKITE_PROJECT_SLUG"]}const Nn={__proto__:null,_getService:Y,detect:Rn,getEnvVarNames:Sn,getServiceName:hn,getServiceParams:vn};function pn(e){return!!e?.CI&&!!e?.CIRCLECI}function Tn(e){return e.envs?.CIRCLE_BUILD_URL??""}function Ln(){return"circleci"}function On(){return"CircleCI"}function Bn(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.CIRCLE_BRANCH??""}function Pn(e,n){const{args:t,envs:r}=e;return t?.sha&&t.sha!==""?(u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha):(u(`Using commit: ${r?.CIRCLE_SHA1}`,{enabled:n.debug}),r?.CIRCLE_SHA1??"")}function Dn(e){const{args:n,envs:t}=e,r=C(n?.slug,t?.CIRCLE_PROJECT_USERNAME,t?.CIRCLE_PROJECT_REPONAME);return t?.CIRCLE_REPOSITORY_URL&&t?.CIRCLE_REPOSITORY_URL!==""?`${t?.CIRCLE_REPOSITORY_URL?.split(":")[1]?.split(".git")[0]}`:r}function An(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.CIRCLE_BUILD_NUM??""}function Mn(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.CIRCLE_PR_NUMBER??""}function Vn(e){return e?.CIRCLE_NODE_INDEX??""}async function Hn(e,n){return{branch:Bn(e),build:An(e),buildURL:Tn(e),commit:Pn(e,n),job:Vn(e.envs),pr:Mn(e),service:Ln(),slug:Dn(e)}}function yn(){return["CI","CIRCLECI"]}const Gn={__proto__:null,detect:pn,getEnvVarNames:yn,getServiceName:On,getServiceParams:Hn};function wn(e){return!!e?.CIRRUS_CI}function Yn(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.CIRRUS_BUILD_ID??""}function Fn(){return""}function jn(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.CIRRUS_BRANCH??""}function kn(e){return e?.CIRRUS_TASK_ID??""}function Kn(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.CIRRUS_PR??""}function Jn(){return"cirrus-ci"}function Wn(){return"Cirrus CI"}function xn(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.CIRRUS_CHANGE_IN_REPO??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function Qn(e){const{args:n,envs:t}=e;return C(n?.slug,t?.CIRRUS_REPO_OWNER,t?.CIRRUS_REPO_NAME)}async function zn(e,n){return{branch:jn(e),build:Yn(e),buildURL:Fn(),commit:xn(e,n),job:kn(e.envs),pr:Kn(e),service:Jn(),slug:Qn(e)}}function qn(){return["CIRRUS_CI"]}const Xn={__proto__:null,detect:wn,getEnvVarNames:qn,getServiceName:Wn,getServiceParams:zn};function Zn(e){return!!e?.CF_PAGES}function et(e){const{args:n}=e;return n?.build??""}function nt(){return""}function tt(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.CF_PAGES_BRANCH??""}function rt(){return""}function st(e){const{args:n}=e;return n?.pr??""}function ut(){return"cloudflare-pages"}function it(){return"Cloudflare Pages"}function ot(e,n){const{args:t,envs:r}=e;return t?.sha&&t.sha!==""?(u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha):(u(`Using commit: ${r?.CF_PAGES_COMMIT_SHA??""}`,{enabled:n.debug}),r?.CF_PAGES_COMMIT_SHA??"")}function at(e){const{args:n}=e;return n?.slug??""}async function ct(e,n){return{branch:tt(e),build:et(e),buildURL:nt(),commit:ot(e,n),job:rt(),pr:st(e),service:ut(),slug:at(e)}}function _t(){return["CF_PAGES","CF_PAGES_COMMIT_SHA","CF_PAGES_BRANCH","CF_PAGES_URL"]}const lt={__proto__:null,detect:Zn,getEnvVarNames:_t,getServiceName:it,getServiceParams:ct};function Et(e){return!!e?.CODEBUILD_CI}function gt(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.CODEBUILD_BUILD_ID??""}function dt(){return""}function Rt(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.CODEBUILD_WEBHOOK_HEAD_REF?t?.CODEBUILD_WEBHOOK_HEAD_REF.replace(/^refs\/heads\//,""):""}function It(e){return e?.CODEBUILD_BUILD_ID??""}function bt(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.CODEBUILD_SOURCE_VERSION&&t?.CODEBUILD_SOURCE_VERSION.startsWith("pr/")?t?.CODEBUILD_SOURCE_VERSION.replace(/^pr\//,""):""}function ft(){return"codebuild"}function mt(){return"AWS CodeBuild"}function Ut(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.CODEBUILD_RESOLVED_SOURCE_VERSION??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function ht(e){const{args:n,envs:t}=e;return n?.slug&&n?.slug!==""?n?.slug:t?.CODEBUILD_SOURCE_REPO_URL?t?.CODEBUILD_SOURCE_REPO_URL.toString().replace(/^.*github.com\//,"").replace(/\.git$/,""):""}async function $t(e,n){return{branch:Rt(e),build:gt(e),buildURL:dt(),commit:Ut(e,n),job:It(e.envs),pr:bt(e),service:ft(),slug:ht(e)}}function Ct(){return["CODEBUILD_BUILD_ID","CODEBUILD_CI","CODEBUILD_RESOLVED_SOURCE_VERSION","CODEBUILD_SOURCE_REPO_URL","CODEBUILD_SOURCE_VERSION","CODEBUILD_WEBHOOK_HEAD_REF"]}const vt={__proto__:null,detect:Et,getEnvVarNames:Ct,getServiceName:mt,getServiceParams:$t};function St(e){return!!e?.DRONE}function Nt(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.DRONE_BUILD_NUMBER??""}function pt(e){const{envs:n}=e;return n?.DRONE_BUILD_LINK??n?.DRONE_BUILD_URL??n?.CI_BUILD_URL??""}function Tt(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n?.branch:t?.DRONE_BRANCH??""}function Lt(){return""}function Ot(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n?.pr:t?.DRONE_PULL_REQUEST??""}function Bt(){return"drone.io"}function Pt(){return"Drone"}function Dt(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.DRONE_COMMIT_SHA??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function At(e){const{args:n,envs:t}=e;return n?.slug&&n?.slug!==""?n?.slug:t?.DRONE_REPO??""}async function Mt(e,n){return{branch:Tt(e),build:Nt(e),buildURL:pt(e),commit:Dt(e,n),job:Lt(),pr:Ot(e),service:Bt(),slug:At(e)}}function Vt(){return["DRONE","DRONE_BRANCH","DRONE_BUILD_NUMBER","DRONE_BUILD_URL","DRONE_COMMIT_SHA","DRONE_PULL_REQUEST","DRONE_REPO"]}const Ht={__proto__:null,detect:St,getEnvVarNames:Vt,getServiceName:Pt,getServiceParams:Mt},yt=a.union([a.string(),a.number(),a.boolean(),a.null()]),S=a.lazy(()=>a.union([yt,a.array(S),a.record(S)]));function Gt(e){return!!e?.GITHUB_ACTIONS}function N(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.GITHUB_RUN_ID??""}async function wt(e){const n=`https://api.github.com/repos/${p(e)}/actions/runs/${N(e)}/jobs`,t=await fetch(n,{headers:{"User-Agent":"Awesome-Octocat-App"}});if(t.status!==200)return"";const r=await t.json(),s=S.parse(r),{envs:i}=e;if(s&&typeof s=="object"&&"jobs"in s&&Array.isArray(s?.jobs)){for(const o of s?.jobs)if(o&&typeof o=="object"&&"name"in o&&o?.name==i?.GITHUB_JOB&&"html_url"in o&&typeof o?.html_url=="string")return o?.html_url}return""}async function Yt(e){const{envs:n}=e,t=await wt(e);return t!==""?t:`${n?.GITHUB_SERVER_URL}/${p(e)}/actions/runs/${N(e)}`}function Ft(e){const{args:n,envs:t}=e;if(n?.branch&&n.branch!=="")return n.branch;const r=/refs\/heads\/(.*)/.exec(t?.GITHUB_REF??"");let s;return r&&(s=r[1]),t?.GITHUB_HEAD_REF&&t?.GITHUB_HEAD_REF!==""&&(s=t?.GITHUB_HEAD_REF),s??""}function jt(e){return e?.GITHUB_WORKFLOW??""}function F(e){const{args:n,envs:t}=e;if(n?.pr&&n.pr!=="")return n.pr;let r;if(t?.GITHUB_HEAD_REF&&t?.GITHUB_HEAD_REF!==""){const s=/refs\/pull\/([0-9]+)\/merge/.exec(t?.GITHUB_REF??"");s&&(r=s[1])}return r??""}function kt(){return"github-actions"}function Kt(){return"GitHub Actions"}function Jt(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=F(e);let i=r?.GITHUB_SHA;if(s){const o=/^[a-z0-9]{40} [a-z0-9]{40}$/,_=R("git",["show","--no-patch","--format=%P"]);if(u(`Merge commit message: ${_}`,{enabled:n.debug}),o.exec(_)){const d=_.split(" ");u(`Split commit message: ${d}`,{enabled:n.debug}),i=d[1]}}return u(`Using commit: ${i??""}`,{enabled:n.debug}),i??""}function p(e){const{args:n,envs:t}=e;return n?.slug&&n.slug!==""?n.slug:t?.GITHUB_REPOSITORY??""}async function Wt(e,n){return{branch:Ft(e),build:N(e),buildURL:await Yt(e),commit:Jt(e,n),job:jt(e.envs),pr:F(e),service:kt(),slug:p(e)}}function xt(){return["GITHUB_ACTION","GITHUB_HEAD_REF","GITHUB_REF","GITHUB_REPOSITORY","GITHUB_RUN_ID","GITHUB_SERVER_URL","GITHUB_SHA","GITHUB_WORKFLOW"]}const Qt={__proto__:null,detect:Gt,getEnvVarNames:xt,getServiceName:Kt,getServiceParams:Wt};function zt(e){return!!e?.GITLAB_CI}function qt(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.CI_BUILD_ID??t?.CI_JOB_ID??""}function Xt(){return""}function Zt(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.CI_BUILD_REF_NAME??t?.CI_COMMIT_REF_NAME??""}function er(){return""}function nr(e){const{args:n}=e;return n?.pr??""}function tr(){return"gitlab"}function rr(){return"GitLab CI"}function sr(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.CI_MERGE_REQUEST_SOURCE_BRANCH_SHA??r?.CI_BUILD_REF??r?.CI_COMMIT_SHA??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function ur(e){const{args:n,envs:t}=e;if(n?.slug&&n?.slug!=="")return n?.slug;const r=t?.CI_BUILD_REPO??t?.CI_REPOSITORY_URL??"";return t?.CI_PROJECT_PATH??I(r)??""}async function ir(e,n){return{branch:Zt(e),build:qt(e),buildURL:Xt(),commit:sr(e,n),job:er(),pr:nr(e),service:tr(),slug:ur(e)}}function or(){return["CI_BUILD_ID","CI_BUILD_REF","CI_BUILD_REF_NAME","CI_BUILD_REPO","CI_COMMIT_REF_NAME","CI_COMMIT_SHA","CI_JOB_ID","CI_MERGE_REQUEST_SOURCE_BRANCH_SHA","CI_PROJECT_PATH","CI_REPOSITORY_URL","GITLAB_CI"]}const ar={__proto__:null,detect:zt,getEnvVarNames:or,getServiceName:rr,getServiceParams:ir};function cr(e){return!!e?.CI&&!!e?.HEROKU_TEST_RUN_BRANCH}function _r(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.HEROKU_TEST_RUN_ID??""}function lr(){return""}function Er(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.HEROKU_TEST_RUN_BRANCH??""}function gr(){return""}function dr(e){const{args:n}=e;return n?.pr??""}function Rr(){return"heroku"}function Ir(){return"Heroku CI"}function br(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t?.sha;const s=r?.HEROKU_TEST_RUN_COMMIT_VERSION??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function fr(e){const{args:n}=e;return n?.slug&&n.slug!==""?n?.slug:I("")}async function mr(e,n){return{branch:Er(e),build:_r(e),buildURL:lr(),commit:br(e,n),job:gr(),pr:dr(e),service:Rr(),slug:fr(e)}}function Ur(){return["CI","HEROKU_TEST_RUN_BRANCH","HEROKU_TEST_RUN_COMMIT_VERSION","HEROKU_TEST_RUN_ID"]}const hr={__proto__:null,detect:cr,getEnvVarNames:Ur,getServiceName:Ir,getServiceParams:mr};function $r(e){return!!e?.JENKINS_URL}function Cr(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BUILD_NUMBER??""}function vr(e){const{envs:n}=e;return n?.BUILD_URL?n?.BUILD_URL:""}function Sr(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.ghprbSourceBranch??t?.CHANGE_BRANCH??t?.GIT_BRANCH??t?.BRANCH_NAME??""}function Nr(){return""}function pr(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.ghprbPullId??t?.CHANGE_ID??""}function Tr(){return"jenkins"}function Lr(){return"Jenkins CI"}function Or(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.ghprbActualCommit??r?.GIT_COMMIT??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function Br(e){const{args:n}=e;return n?.slug&&n?.slug!==""?n?.slug:I("")}async function Pr(e,n){return{branch:Sr(e),build:Cr(e),buildURL:vr(e),commit:Or(e,n),job:Nr(),pr:pr(e),service:Tr(),slug:Br(e)}}function Dr(){return["BRANCH_NAME","BUILD_NUMBER","BUILD_URL","CHANGE_ID","GIT_BRANCH","GIT_COMMIT","JENKINS_URL","ghprbActualCommit","ghprbPullId","ghprbSourceBranch"]}const Ar={__proto__:null,detect:$r,getEnvVarNames:Dr,getServiceName:Lr,getServiceParams:Pr};function Mr(e){return!v?.spawnSync(e)?.error}function Vr(){return Mr("git")}function Hr(e){const{args:n}=e;return n?.build??""}function yr(){return""}function Gr(e){const{args:n,envs:t}=e,r=n?.branch??t?.GIT_BRANCH??t?.BRANCH_NAME??"";if(r!=="")return r;try{return R("git",["rev-parse","--abbrev-ref","HEAD"])}catch(s){throw new Error(`There was an error getting the branch name from git: ${s}`)}}function wr(){return""}function Yr(e){const{args:n}=e;return n?.pr??""}function Fr(){return""}function jr(){return"Local"}function kr(e,n){const{args:t,envs:r}=e,s=t?.sha??r?.GIT_COMMIT??"";if(s!=="")return u(`Using commit: ${s}`,{enabled:n.debug}),s;try{const i=R("git",["rev-parse","HEAD"]);return u(`Using commit: ${i}`,{enabled:n.debug}),i}catch(i){throw new Error(`There was an error getting the commit SHA from git: ${i}`)}}function Kr(e){const{args:n}=e;if(n?.slug&&n?.slug!=="")return n.slug;try{const t=R("git",["config","--get","remote.origin.url"]);return G(t)}catch(t){throw new Error(`There was an error getting the slug from git: ${t}`)}}async function Jr(e,n){return{branch:Gr(e),build:Hr(e),buildURL:yr(),commit:kr(e,n),job:wr(),pr:Yr(e),service:Fr(),slug:Kr(e)}}function Wr(){return["BRANCH_NAME","CI","GIT_BRANCH","GIT_COMMIT"]}const xr={__proto__:null,detect:Vr,getEnvVarNames:Wr,getServiceName:jr,getServiceParams:Jr};function Qr(e){return!!e?.NETLIFY}function zr(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BUILD_ID??""}function qr(){return""}function Xr(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n?.branch:t?.BRANCH??""}function Zr(){return""}function es(e){const{args:n}=e;return n?.pr??""}function ns(){return"netlify"}function ts(){return"Netlify"}function rs(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.COMMIT_REF??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function ss(e){const{args:n}=e;return n?.slug??""}async function us(e,n){return{branch:Xr(e),build:zr(e),buildURL:qr(),commit:rs(e,n),job:Zr(),pr:es(e),service:ns(),slug:ss(e)}}function is(){return["NETLIFY","BUILD_ID","REPOSITORY_URL","BRANCH","HEAD","COMMIT_REF","CACHED_COMMIT_REF","PULL_REQUEST","REVIEW_ID"]}const os={__proto__:null,detect:Qr,getEnvVarNames:is,getServiceName:ts,getServiceParams:us};function as(e){return!!e?.RENDER}function cs(e){const{args:n}=e;return n?.build??""}function _s(){return""}function ls(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.RENDER_GIT_BRANCH??""}function Es(){return""}function gs(e){const{args:n}=e;return n?.pr??""}function ds(){return"render"}function Rs(){return"Render"}function Is(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.RENDER_GIT_COMMIT??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function bs(e){const{args:n,envs:t}=e;return n?.slug&&n?.slug!==""?n?.slug:t?.RENDER_GIT_REPO_SLUG??""}async function fs(e,n){return{branch:ls(e),build:cs(e),buildURL:_s(),commit:Is(e,n),job:Es(),pr:gs(e),service:ds(),slug:bs(e)}}function ms(){return["RENDER","IS_PULL_REQUEST","RENDER_DISCOVERY_SERVICE","RENDER_EXTERNAL_HOSTNAME","RENDER_EXTERNAL_URL","RENDER_GIT_BRANCH","RENDER_GIT_COMMIT","RENDER_GIT_REPO_SLUG","RENDER_INSTANCE_ID","RENDER_SERVICE_ID","RENDER_SERVICE_NAME","RENDER_SERVICE_TYPE"]}const Us={__proto__:null,detect:as,getEnvVarNames:ms,getServiceName:Rs,getServiceParams:fs};function hs(e){return!!e?.TEAMCITY_VERSION}function $s(){return""}function Cs(){return"teamcity"}function vs(){return"TeamCity"}function Ss(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.BRANCH_NAME??""}function Ns(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.BUILD_VCS_NUMBER??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function ps(e){const{args:n}=e;return n?.slug&&n.slug!==""?n.slug:I("")??""}function Ts(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.BUILD_NUMBER??""}function Ls(e){const{args:n}=e;return n?.pr??""}function Os(){return""}async function Bs(e,n){return{branch:Ss(e),build:Ts(e),buildURL:$s(),commit:Ns(e,n),job:Os(),pr:Ls(e),service:Cs(),slug:ps(e)}}function Ps(){return["TEAMCITY_VERSION"]}const Ds={__proto__:null,detect:hs,getEnvVarNames:Ps,getServiceName:vs,getServiceParams:Bs};function As(e){return!!e?.CI&&!!e?.TRAVIS&&!e?.SHIPPABLE}function Ms(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.TRAVIS_JOB_NUMBER??""}function Vs(){return""}function Hs(e){const{args:n,envs:t}=e;if(n?.branch&&n.branch!=="")return n.branch;let r="";return t?.TRAVIS_BRANCH!==t?.TRAVIS_TAG&&(r=t?.TRAVIS_PULL_REQUEST_BRANCH??t?.TRAVIS_BRANCH??""),r}function ys(e){return e?.TRAVIS_JOB_ID??""}function Gs(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.TRAVIS_PULL_REQUEST??""}function ws(){return"travis"}function Ys(){return"Travis CI"}function Fs(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.TRAVIS_PULL_REQUEST_SHA??r?.TRAVIS_COMMIT??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function js(e){const{args:n,envs:t}=e;return n?.slug&&n.slug!==""?n.slug:t?.TRAVIS_REPO_SLUG??""}async function ks(e,n){return{branch:Hs(e),build:Ms(e),buildURL:Vs(),commit:Fs(e,n),job:ys(e.envs),pr:Gs(e),service:ws(),slug:js(e)}}function Ks(){return["TRAVIS"]}const Js={__proto__:null,detect:As,getEnvVarNames:Ks,getServiceName:Ys,getServiceParams:ks};function Ws(e){return!!e?.VERCEL}function xs(e){const{args:n}=e;return n?.build??""}function Qs(){return""}function zs(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.VERCEL_GIT_COMMIT_REF??""}function qs(){return""}function Xs(e){const{args:n}=e;return n?.pr??""}function Zs(){return"vercel"}function eu(){return"Vercel"}function nu(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.VERCEL_GIT_COMMIT_SHA??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function tu(e){const{args:n,envs:t}=e;if(n?.slug&&n.slug!=="")return n.slug;let r="";const s=t?.VERCEL_GIT_REPO_OWNER??"",i=t?.VERCEL_GIT_REPO_SLUG??"";return s&&i&&(r=`${s}/${i}`),r}async function ru(e,n){return{branch:zs(e),build:xs(e),buildURL:Qs(),commit:nu(e,n),job:qs(),pr:Xs(e),service:Zs(),slug:tu(e)}}function su(){return["VERCEL","CI","VERCEL_ENV","VERCEL_URL","VERCEL_BRANCH_URL","VERCEL_REGION","VERCEL_AUTOMATION_BYPASS_SECRET","VERCEL_GIT_PROVIDER","VERCEL_GIT_REPO_SLUG","VERCEL_GIT_REPO_OWNER","VERCEL_GIT_REPO_ID","VERCEL_GIT_COMMIT_REF","VERCEL_GIT_COMMIT_SHA","VERCEL_GIT_COMMIT_MESSAGE","VERCEL_GIT_COMMIT_AUTHOR_NAME","VERCEL_GIT_PREVIOUS_SHA","VERCEL_GIT_PULL_REQUEST_ID"]}const uu={__proto__:null,detect:Ws,getEnvVarNames:su,getServiceName:eu,getServiceParams:ru};function iu(e){return!!e?.WERCKER_MAIN_PIPELINE_STARTED}function ou(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.WERCKER_MAIN_PIPELINE_STARTED??""}function au(e){const{envs:n}=e;return n?.WERCKER_BUILD_URL??""}function cu(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.WERCKER_GIT_BRANCH??""}function _u(){return""}function lu(e){const{args:n}=e;return n?.pr??""}function Eu(){return"wercker"}function gu(){return"Wercker CI"}function du(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.WERCKER_GIT_COMMIT??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function Ru(e){const{args:n,envs:t}=e;return C(n?.slug,t?.WERCKER_GIT_OWNER,t?.WERCKER_GIT_REPOSITORY)}async function Iu(e,n){return{branch:cu(e),build:ou(e),buildURL:au(e),commit:du(e,n),job:_u(),pr:lu(e),service:Eu(),slug:Ru(e)}}function bu(){return["WERCKER_MAIN_PIPELINE_STARTED"]}const fu={__proto__:null,detect:iu,getEnvVarNames:bu,getServiceName:gu,getServiceParams:Iu};function mu(e){return e?.CI==="woodpecker"}function Uu(e){const{args:n,envs:t}=e;return n?.build&&n.build!==""?n.build:t?.CI_BUILD_NUMBER??""}function hu(e){const{envs:n}=e;return n?.CI_BUILD_LINK??""}function $u(e){const{args:n,envs:t}=e;return n?.branch&&n.branch!==""?n.branch:t?.CI_COMMIT_SOURCE_BRANCH??t?.CI_COMMIT_BRANCH??""}function Cu(e){const{envs:n}=e;return n?.CI_JOB_NUMBER??""}function vu(e){const{args:n,envs:t}=e;return n?.pr&&n.pr!==""?n.pr:t?.CI_COMMIT_PULL_REQUEST??""}function Su(){return"woodpecker"}function Nu(){return"Woodpecker CI"}function pu(e,n){const{args:t,envs:r}=e;if(t?.sha&&t.sha!=="")return u(`Using commit: ${t.sha}`,{enabled:n.debug}),t.sha;const s=r?.CI_COMMIT_SHA??"";return u(`Using commit: ${s}`,{enabled:n.debug}),s}function Tu(e){const{args:n,envs:t}=e;return n?.slug&&n.slug!==""?n.slug:t?.CI_REPO??""}async function Lu(e,n){return{branch:$u(e),build:Uu(e),buildURL:hu(e),commit:pu(e,n),pr:vu(e),job:Cu(e),service:Su(),slug:Tu(e)}}function Ou(){return["CI","CI_BUILD_NUMBER","CI_BUILD_LINK","CI_COMMIT_SOURCE_BRANCH","CI_COMMIT_BRANCH","CI_JOB_NUMBER","CI_COMMIT_PULL_REQUEST","CI_COMMIT_SHA","CI_COMMIT_TAG","CI_REPO"]}const Bu={__proto__:null,detect:mu,getEnvVarNames:Ou,getServiceName:Nu,getServiceParams:Lu},Pu=[Ne,ye,en,dn,Nn,Gn,Xn,lt,vt,Ht,Qt,ar,hr,Ar,os,Us,Ds,Js,uu,fu,Bu,xr];async function Du(e,n){B("Detecting CI provider");for(const t of Pu)if(t.detect(e.envs))return B(`Detected CI provider: ${t.getServiceName()}`),await t.getServiceParams(e,n);throw l("Could not detect CI provider"),new Error("Could not detect provider")}function C(e,n,t){return typeof e<"u"&&e!==""?e:typeof n<"u"&&typeof t<"u"&&n!==""&&t!==""?`${n}/${t}`:""}class Au extends Error{constructor(n){super(n)}}async function Mu({message:e,bundleName:n,preSignedUrl:t,retryCount:r=V}){const s=e[Symbol.iterator](),i=new W({pull(_){const d=s.next();d.done?_.close():_.enqueue(d.value)}}).pipeThrough(new x);let o;try{o=await y({url:t,retryCount:r,name:"`upload-stats`",requestData:{method:"PUT",headers:{"Content-Type":"application/json"},duplex:"half",body:i}})}catch{throw l("Failed to upload stats, fetch failed"),new f("Failed to upload stats")}if(o.status===429)throw l("Upload limit reached"),new M("Upload limit reached");if(!o.ok)throw l(`Failed to upload stats, bad response. Response ${o.status} - ${o.statusText}`),new Au("Failed to upload stats");return O(`Successfully uploaded stats for bundle: ${n}`),!0}var Vu=Object.defineProperty,Hu=(e,n,t)=>n in e?Vu(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,c=(e,n,t)=>(Hu(e,typeof n!="symbol"?n+"":n,t),t),j=(e,n,t)=>{if(!n.has(e))throw TypeError("Cannot "+t)},E=(e,n,t)=>(j(e,n,"read from private field"),t?t.call(e):n.get(e)),T=(e,n,t)=>{if(n.has(e))throw TypeError("Cannot add the same private member more than once");n instanceof WeakSet?n.add(e):n.set(e,t)},L=(e,n,t,r)=>(j(e,n,"write to private field"),r?r.call(e,t):n.set(e,t),t),b,m,g;class yu{constructor(n){c(this,"apiUrl"),c(this,"dryRun"),c(this,"retryCount"),c(this,"enableBundleAnalysis"),c(this,"uploadToken"),c(this,"debug"),c(this,"originalBundleName"),c(this,"branch"),c(this,"build"),c(this,"pr"),c(this,"sha"),c(this,"slug"),c(this,"version"),c(this,"bundler"),c(this,"outputPath"),c(this,"builtAt"),c(this,"duration"),c(this,"assets"),c(this,"chunks"),c(this,"modules"),T(this,b,void 0),T(this,m,void 0),T(this,g,{bundleName:!1,pluginDetails:!1}),this.version="1",this.apiUrl=n.apiUrl,this.dryRun=n.dryRun,this.retryCount=n.retryCount,this.enableBundleAnalysis=n.enableBundleAnalysis,this.uploadToken=n.uploadToken,this.debug=n.debug,this.originalBundleName=n.bundleName,n.uploadOverrides&&(this.branch=n.uploadOverrides.branch,this.build=n.uploadOverrides.build,this.pr=n.uploadOverrides.pr,this.sha=n.uploadOverrides.sha,this.slug=n.uploadOverrides.slug),L(this,b,n.bundleName)}start(){this.builtAt=Date.now()}end(){this.duration=Date.now()-(this.builtAt??0)}lockBundleName(){E(this,g).bundleName=!0}unlockBundleName(){E(this,g).bundleName=!1}setBundleName(n){return E(this,g).bundleName||L(this,b,n),E(this,b)}get bundleName(){return E(this,b)}setPlugin(n,t){return E(this,g).pluginDetails||L(this,m,{name:n,version:t}),E(this,m)}get plugin(){return E(this,m)}lockPluginDetails(){E(this,g).pluginDetails=!0}unlockPluginDetails(){E(this,g).pluginDetails=!1}async write(){if(this.dryRun||!this.bundleName||this.bundleName==="")return;const n={branch:this.branch,build:this.build,pr:this.pr,sha:this.sha,slug:this.slug},t={envs:process.env,args:n},r=await Du(t,this);let s="";try{s=await ge({apiURL:this?.apiUrl??"https://api.codecov.io",uploadToken:this?.uploadToken,serviceParams:r,retryCount:this?.retryCount})}catch{return}try{await Mu({preSignedUrl:s,bundleName:this.bundleName,message:this.bundleStatsToJson(),retryCount:this?.retryCount})}catch{return}}bundleStatsToJson(){const n={version:this.version,builtAt:this.builtAt,duration:this.duration,bundleName:this.bundleName??"",outputPath:this.outputPath,bundler:this.bundler,plugin:this.plugin,assets:this.assets,chunks:this.chunks,modules:this.modules};return JSON.stringify(n)}}b=new WeakMap,m=new WeakMap,g=new WeakMap;export{yu as Output,Q as checkNodeVersion,ee as handleErrors,Z as normalizeOptions,te as normalizePath,l as red};
//# sourceMappingURL=index.mjs.map
